{"version":3,"sources":["components/ScoreBoard.js","components/Card.js","components/Cards.js","components/CardsContainer.js","components/Footer.js","components/RulesModal.js","App.js","index.js"],"names":["Scoreboard","props","className","currentScore","highScore","Card","onClick","cardClick","data-id","card","name","src","imageURL","alt","index","memoryCards","CardsContainer","useState","cardsClicked","setCardsClicked","cards","setCards","e","target","arr","clickedCard","currentTarget","getAttribute","indexOf","console","log","resetScore","incrementScore","push","cardsArray","i","length","j","Math","floor","random","shuffleCards","map","Footer","RulesModal","App","score","setScore","setHighScore","displayRules","setDisplayRules","ScoreBoard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAYeA,EAVI,SAACC,GAClB,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,gBAAf,oBAAuCD,EAAME,gBAC7C,sDACA,sBAAKD,UAAU,aAAf,yBAAyCD,EAAMG,iB,OCQtCC,EAbF,SAACJ,GACZ,OACE,qBACEC,UAAU,OAEVI,QAASL,EAAMM,UACfC,UAASP,EAAMQ,KAAKC,KAJtB,SAME,qBAAKC,IAAKV,EAAMQ,KAAKG,SAAUC,IAAI,MAJ9BZ,EAAMa,QCMFC,EAZG,CAChB,CAAEL,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,WACxB,CAAEF,KAAM,KAAME,SAAU,YACxB,CAAEF,KAAM,KAAME,SAAU,aCmDXI,MAxDf,SAAwBf,GAAQ,IAAD,EACWgB,mBAAS,IADpB,mBACtBC,EADsB,KACRC,EADQ,OAEHF,mBAASF,GAFN,mBAEtBK,EAFsB,KAEfC,EAFe,KA2BvBd,EAAY,SAACe,GACjB,IAN0BC,EAMtBC,EAAG,YAAON,GACVO,EAAcH,EAAEI,cAAcC,aAAa,WAPrBJ,EAUHE,EAThBP,EAAaU,QAAQL,IAAW,GAUrCM,QAAQC,IAAI,mCACZX,EAAgB,IAEhBlB,EAAM8B,eAEN9B,EAAM+B,iBAENR,EAAIS,KAAKR,GACTN,EAAgBK,IAnCC,WAInB,IAHA,IAAIU,EAAU,YAAOd,GAGZe,EAAID,EAAWE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAE9C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IAFM,EAIb,CAACD,EAAWG,GAAIH,EAAWC,IAA3DD,EAAWC,GAJkC,KAI9BD,EAAWG,GAJmB,KAOhDR,QAAQC,IAAII,GACZb,EAASa,GA0BTO,IAGF,OACE,qBAAKvC,UAAU,kBAAf,SACGkB,EAAMsB,KAAI,SAACjC,EAAMK,GAAP,OACT,cAAC,EAAD,CAAkBL,KAAMA,EAAMF,UAAWA,GAA9BO,SC1CJ6B,EAVA,SAAC1C,GACd,OACE,wBAAQC,UAAU,SAAlB,SACE,8BACE,mBAAGA,UAAU,cAAb,eADF,6BCwBS0C,EA3BI,WACjB,OACE,sBAAK1C,UAAU,cAAf,UACE,6CACA,+BACE,gGACA,8KAIA,+HAIA,oHAIA,+HC4BO2C,MAzCf,WAAgB,IAAD,EACa5B,mBAAS,GADtB,mBACN6B,EADM,KACCC,EADD,OAEqB9B,mBAAS,GAF9B,mBAENb,EAFM,KAEK4C,EAFL,OAG2B/B,oBAAS,GAHpC,mBAGNgC,EAHM,KAGQC,EAHR,KAiBb,OACE,gCACE,cAACC,EAAD,CAAYhD,aAAc2C,EAAO1C,UAAWA,IAC5C,wBACEE,QAAS,WACP4C,GAAiBD,IAFrB,SAKGA,EAAe,YAAc,eAG/BA,GAAgB,cAAC,EAAD,KAEfA,GACA,cAAC,EAAD,CACEjB,eA3Be,WACrBe,EAASD,EAAQ,IA2BXf,WAxBW,WACbe,EAAQ1C,IACVyB,QAAQC,IAAI,kBACZkB,EAAaF,IAGfC,EAAS,MAqBP,cAAC,EAAD,QCvCNK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5d137b11.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Scoreboard = (props) => {\r\n  return (\r\n    <div className=\"scoreboard\">\r\n      <div className=\"current-score\">Score: {props.currentScore}</div>\r\n      <h1>Musical Memory Cards</h1>\r\n      <div className=\"high-score\">High Score: {props.highScore}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      key={props.index}\r\n      onClick={props.cardClick}\r\n      data-id={props.card.name}\r\n    >\r\n      <img src={props.card.imageURL} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","let memoryCards = [\r\n  { name: 'e1', imageURL: './e.JPG' },\r\n  { name: 'f1', imageURL: './f.JPG' },\r\n  { name: 'g1', imageURL: './g.JPG' },\r\n  { name: 'a1', imageURL: './a.JPG' },\r\n  { name: 'b1', imageURL: './b.JPG' },\r\n  { name: 'c1', imageURL: './c.JPG' },\r\n  { name: 'd1', imageURL: './d.JPG' },\r\n  { name: 'e2', imageURL: './e2.JPG' },\r\n  { name: 'f2', imageURL: './f2.JPG' },\r\n];\r\n\r\nexport default memoryCards;\r\n","import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport memoryCards from './Cards';\r\n\r\nfunction CardsContainer(props) {\r\n  const [cardsClicked, setCardsClicked] = useState([]);\r\n  const [cards, setCards] = useState(memoryCards);\r\n\r\n  // Use Fisher-Yates shuffle to randomize cards -> reverse through an array and swap each element with a random element that comes before it (with a lower index)\r\n  // REFERENCE: https://javascript.info/task/shuffle\r\n  const shuffleCards = () => {\r\n    let cardsArray = [...cards];\r\n\r\n    // Reverse through array\r\n    for (let i = cardsArray.length - 1; i > 0; i--) {\r\n      // Swap with random element stored in a lower index than i is currently set to\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      // Use destructuring to swap elements easily\r\n      [cardsArray[i], cardsArray[j]] = [cardsArray[j], cardsArray[i]];\r\n    }\r\n\r\n    console.log(cardsArray);\r\n    setCards(cardsArray);\r\n  };\r\n\r\n  // Check if card has already been clicked in current game\r\n  const checkCardSelection = (target) => {\r\n    return cardsClicked.indexOf(target) > -1 ? true : false;\r\n  };\r\n\r\n  // Handle click\r\n  const cardClick = (e) => {\r\n    let arr = [...cardsClicked];\r\n    let clickedCard = e.currentTarget.getAttribute('data-id');\r\n\r\n    // Check if card has already been clicked\r\n    if (checkCardSelection(clickedCard)) {\r\n      console.log('clear clicked cards array here!');\r\n      setCardsClicked([]);\r\n\r\n      props.resetScore();\r\n    } else {\r\n      props.incrementScore();\r\n\r\n      arr.push(clickedCard);\r\n      setCardsClicked(arr);\r\n    }\r\n\r\n    shuffleCards();\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {cards.map((card, index) => (\r\n        <Card key={index} card={card} cardClick={cardClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardsContainer;\r\n","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>\r\n        <i className=\"fas fa-code\"> </i> Made by Scott Alton\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst RulesModal = () => {\r\n  return (\r\n    <div className=\"rules-modal\">\r\n      <h2>How to Play</h2>\r\n      <ul>\r\n        <li>The goal is to select cards that have not yet been clicked on.</li>\r\n        <li>\r\n          Try to name the name of the note you are clicking on, or write it on a\r\n          sheet of scrap paper to keep track of what has already been selected.\r\n        </li>\r\n        <li>\r\n          Once you click on a card, you will recieve a point if the card has not\r\n          already been selected.\r\n        </li>\r\n        <li>\r\n          If the card HAS already been selected, you lose and your score will be\r\n          reset to 0.\r\n        </li>\r\n        <li>\r\n          To win them game you must select all 9 unique cards without selecting\r\n          any cards twice.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RulesModal;\r\n","import { useState } from 'react';\nimport './App.css';\nimport ScoreBoard from './components/ScoreBoard';\nimport CardsContainer from './components/CardsContainer';\nimport Footer from './components/Footer';\nimport RulesModal from './components/RulesModal';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [displayRules, setDisplayRules] = useState(false);\n\n  const incrementScore = () => {\n    setScore(score + 1);\n  };\n\n  const resetScore = () => {\n    if (score > highScore) {\n      console.log('New high score');\n      setHighScore(score);\n    }\n\n    setScore(0);\n  };\n  return (\n    <div>\n      <ScoreBoard currentScore={score} highScore={highScore} />\n      <button\n        onClick={() => {\n          setDisplayRules(!displayRules);\n        }}\n      >\n        {displayRules ? 'Play Game' : 'Show Rules'}\n      </button>\n\n      {displayRules && <RulesModal />}\n\n      {!displayRules && (\n        <CardsContainer\n          incrementScore={incrementScore}\n          resetScore={resetScore}\n        />\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}